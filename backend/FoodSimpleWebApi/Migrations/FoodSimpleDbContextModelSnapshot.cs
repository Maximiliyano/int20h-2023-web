// <auto-generated />
using System;
using FoodSimpleWebApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;

#nullable disable

namespace FoodSimpleWebApi.Migrations
{
    [DbContext(typeof(FoodSimpleDbContext))]
    partial class FoodSimpleDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FoodSimpleWebApi.Models.ProductDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("RecipeDtoId")
                        .HasColumnType("int");

                    b.Property<int>("Unit")
                        .HasColumnType("int");

                    b.Property<int?>("UserDtoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RecipeDtoId");

                    b.HasIndex("UserDtoId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("FoodSimpleWebApi.Models.RecipeDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CookingTime")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("Difficult")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UserDtoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserDtoId");

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("FoodSimpleWebApi.Models.UserDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(65)
                        .HasColumnType("nvarchar(65)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "TNRPUPE@gmail.com",
                            Name = "KCILPNH",
                            Password = "UGTJHS"
                        },
                        new
                        {
                            Id = 2,
                            Email = "RCBPPAA@gmail.com",
                            Name = "IHVCQFN",
                            Password = "CPVWAR"
                        },
                        new
                        {
                            Id = 3,
                            Email = "YQDFDKC@gmail.com",
                            Name = "JSXQUBP",
                            Password = "OBVPAI"
                        },
                        new
                        {
                            Id = 4,
                            Email = "VQSGLBW@gmail.com",
                            Name = "CBTIPLM",
                            Password = "PEHGNV"
                        },
                        new
                        {
                            Id = 5,
                            Email = "MQYDHSE@gmail.com",
                            Name = "WOIQCMA",
                            Password = "FGWXNR"
                        },
                        new
                        {
                            Id = 6,
                            Email = "QLGVTIO@gmail.com",
                            Name = "MOXEEDH",
                            Password = "TARTXN"
                        },
                        new
                        {
                            Id = 7,
                            Email = "LSVARLX@gmail.com",
                            Name = "KDRMZYM",
                            Password = "GVELVB"
                        },
                        new
                        {
                            Id = 8,
                            Email = "GLXXRWF@gmail.com",
                            Name = "LKAFXLJ",
                            Password = "LVMCTZ"
                        },
                        new
                        {
                            Id = 9,
                            Email = "NXIAQYE@gmail.com",
                            Name = "YAGEGZX",
                            Password = "KGJZBN"
                        },
                        new
                        {
                            Id = 10,
                            Email = "FIUAHON@gmail.com",
                            Name = "GHZZRIS",
                            Password = "TDRHVV"
                        });
                });

            modelBuilder.Entity("FoodSimpleWebApi.Models.ProductDto", b =>
                {
                    b.HasOne("FoodSimpleWebApi.Models.RecipeDto", null)
                        .WithMany("Products")
                        .HasForeignKey("RecipeDtoId");

                    b.HasOne("FoodSimpleWebApi.Models.UserDto", null)
                        .WithMany("Products")
                        .HasForeignKey("UserDtoId");
                });

            modelBuilder.Entity("FoodSimpleWebApi.Models.RecipeDto", b =>
                {
                    b.HasOne("FoodSimpleWebApi.Models.UserDto", null)
                        .WithMany("Recipes")
                        .HasForeignKey("UserDtoId");
                });

            modelBuilder.Entity("FoodSimpleWebApi.Models.RecipeDto", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("FoodSimpleWebApi.Models.UserDto", b =>
                {
                    b.Navigation("Products");

                    b.Navigation("Recipes");
                });
#pragma warning restore 612, 618
        }
    }
}
